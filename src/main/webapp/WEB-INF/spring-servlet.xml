<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:lang="http://www.springframework.org/schema/lang"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
        http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
    
 	<context:annotation-config />
    <context:component-scan base-package="mymedia" />
    
	<!--Handle static content in /resources -->
	<context:component-scan base-package="spring.web" />
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"></bean>
    
    <bean id="jspViewResolver"
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass"
            value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/" />
        <property name="suffix" value=".jsp" />
    </bean>
    
    <bean id="messageSource"
        class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:messages" />
        <property name="defaultEncoding" value="UTF-8" />
    </bean>
    
    <!-- <bean id="propertyConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
        p:location="classpath:mymedia.properties" /> -->
    <bean id="propertyConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="ignoreResourceNotFound" value="true" />
        <property name="order" value="1"/>
        <property name="locations">
            <list>
                <!-- Default properties -->
                <value>classpath:default-swordfishsync.properties</value>
                <!-- User specific properties -->
                <value>file:${user.home}/.swordfishsync/swordfishsync.properties</value>
            </list>
        </property>
    </bean>
    
    <tx:annotation-driven />
    
    <bean id="dataSourceMyMedia"
        class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"
        p:driverClassName="${jdbc.driverClassName}"
        p:url="${jdbc.databaseurl}" p:username="${jdbc.username}"
        p:password="${jdbc.password}" />
    <bean id="sessionFactoryMyMedia"
        class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSourceMyMedia" />
        <property name="configLocation">
            <value>classpath:hibernate.cfg.xml</value>
        </property>
        <property name="configurationClass">
            <value>org.hibernate.cfg.AnnotationConfiguration</value>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${jdbc.hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${jdbc.hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${jdbc.hibernate.format_sql}</prop>
                <prop key="hibernate.hbm2ddl.auto">${jdbc.hibernate.hbm2ddl.auto}</prop>
                <!-- <prop key="hibernate.connection.autocommit">true</prop> -->
            </props>
        </property>
    </bean>
    <bean id="transactionManagerMyMedia"
        class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactoryMyMedia" />
        <qualifier value="mymedia"/>
    </bean>

    <bean class="mymedia.services.MyMediaLifecycle" init-method="start" destroy-method="stop"></bean>
    
    <!--  MAIL SENDER API -->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${mail.smtp.host}"/>
        <property name="port" value="${mail.smtp.port}"/>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>
     <!-- SIMPLE MAIL MESSAGE TEMPLATES -->
    <bean id="defaultTemplateMessage" class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="${mail.from}"/>
        <property name="subject" value="${mail.default.subject}"/>
        <property name="text" value="${mail.default.body}"/>
    </bean>
    <bean id="newDefaultTemplateMessage" class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="${mail.from}"/>
        <property name="subject" value="${mail.new.default.subject}"/>
        <property name="text" value="${mail.new.default.body}"/>
    </bean>
    <bean id="newTvTemplateMessage" class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="${mail.from}"/>
        <property name="subject" value="${mail.new.tv.subject}"/>
        <property name="text" value="${mail.new.tv.body}"/>
    </bean>
    <bean id="newMovieTemplateMessage" class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="${mail.from}"/>
        <property name="subject" value="${mail.new.movie.subject}"/>
        <property name="text" value="${mail.new.movie.body}"/>
    </bean>
    <bean id="completedDefaultTemplateMessage" class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="${mail.from}"/>
        <property name="subject" value="${mail.completed.default.subject}"/>
        <property name="text" value="${mail.completed.default.body}"/>
    </bean>
    <bean id="completedTvTemplateMessage" class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="${mail.from}"/>
        <property name="subject" value="${mail.completed.tv.subject}"/>
        <property name="text" value="${mail.completed.tv.body}"/>
    </bean>
    <bean id="completedMovieTemplateMessage" class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="${mail.from}"/>
        <property name="subject" value="${mail.completed.movie.subject}"/>
        <property name="text" value="${mail.completed.movie.body}"/>
    </bean>
    <!-- MAIL MANAGER -->
    <bean id="emailManager" class="mymedia.util.EmailManager">
        <property name="mailSender" ref="mailSender"/>
        <property name="defaultTemplateMessage" ref="defaultTemplateMessage"/>
        <property name="newDefaultTemplateMessage" ref="newDefaultTemplateMessage"/>
        <property name="newTvTemplateMessage" ref="newTvTemplateMessage"/>
        <property name="newMovieTemplateMessage" ref="newMovieTemplateMessage"/>
        <property name="completedDefaultTemplateMessage" ref="completedDefaultTemplateMessage"/>
        <property name="completedTvTemplateMessage" ref="completedTvTemplateMessage"/>
        <property name="completedMovieTemplateMessage" ref="completedMovieTemplateMessage"/>
    </bean>
    
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
    
</beans>