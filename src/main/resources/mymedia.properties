# mymedia properties
# mymedia.syncInterval: in minutes
mymedia.title = MyMedia
mymedia.syncInterval = 15
mymedia.tvdbApiKey = 
mymedia.tvdbApiNotice = thetvdb dot com
mymedia.tmdbApiKey = 
mymedia.tmdbApiNotice = This product uses the TMDb API but is not endorsed or certified by TMDb.

##### FEED PROPERTIES ######
# feed properties
# isActive - still fetches feed, but does not add torrents
# syncInterval in minutes
# action: add/nofify/ignore
# uploadLimit in Kbps
# activityInterval in days
# deleteInterval in days
# action: download/notify/ignore
# downloadDirectory only use "/" in directory path
# filter.action: add/ignore (default ignore)
# removeTorrentOnComplete: remove torrent from torrent client
# initialPopulate: add all existing torrents when feed first added
feed.count = 1
feed.1.url = http://www.mininova.org/rss/ubuntu
feed.1.initialPopulate = false
feed.1.isActive = true
feed.1.action = download
feed.1.syncInterval = 30
feed.1.name = Ubuntu releases
feed.1.downloadDirectory = /data/linux/ubuntu/

torrentclient.type = Transmission
torrentclient.host = localhost
torrentclient.port = 9091
torrentclient.username = transmission
torrentclient.password = transmission

mail.smtp.host=192.168.1.100
mail.smtp.port=25
mail.from=mymedia@sector101
mail.default.subject={feedName} notification: {torrentName}
mail.default.body=<p>Notification for: <b>{torrentName}</b></p><p>{posterImage}</p><p>{extraInfo}</p>
mail.new.default.subject={feedName} download available: {torrentName}
mail.new.default.body=<p><b>{torrentName}</b> is available to download: {url}</p><p>{posterImage}</p><p>{extraInfo}</p>
mail.new.tv.subject={feedName} download available: {mediaName}
mail.new.tv.body=<p><b>{torrentName}</b> is available to download: {url}</p><p>{backdropImage}</p><p>{episodeTitle}</p><p>{episodeDescription}</p><p>{posterImage}</p><p>{extraInfo}</p><p style="color:#FFFFFF;">{notice}</p>
mail.new.movie.subject={feedName} download available: {mediaName} ({year}) {quality}
mail.new.movie.body=<p><b>{torrentName}</b> is available to download: {url}</p><p>{backdropImage}</p><p>{extraInfo}</p><p>{posterImage}</p><p style="color:#FFFFFF;">{notice}</p>
mail.completed.default.subject={feedName} download complete: {torrentName}
mail.completed.default.body=<p><b>{torrentName}</b> has finished downloading to {downloadDir}</p><p>{posterImage}</p><p>{extraInfo}</p>
mail.completed.tv.subject={feedName} download complete: {mediaName}
mail.completed.tv.body=<p><b>{torrentName}</b> has finished downloading to {downloadDir}</p><p>{backdropImage}</p><p>{episodeTitle}</p><p>{episodeDescription}</p><p>{posterImage}</p><p>{extraInfo}</p><p style="color:#FFFFFF;">{notice}</p>
mail.completed.movie.subject={feedName} download complete: {mediaName} ({year}) {quality}
mail.completed.movie.body=<p><b>{torrentName}</b> has finished downloading to {downloadDir}</p><p>{backdropImage}</p><p>{extraInfo}</p><p>{posterImage}</p><p style="color:#FFFFFF;">{notice}</p>

### DB settings
jdbc.mymedia.driverClassName=com.mysql.jdbc.Driver
jdbc.mymedia.dialect=org.hibernate.dialect.MySQLDialect
jdbc.mymedia.databaseurl=jdbc:mysql://localhost:3306/mymedia
jdbc.mymedia.username=mymedia
jdbc.mymedia.password=mymedia
#jdbc.mymedia.autoddl=validate
jdbc.mymedia.autoddl=update
jdbc.mymedia.show_sql=false
jdbc.mymedia.format_sql=false
# could use hsqldb

